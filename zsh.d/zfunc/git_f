## git関連関数
function gam() {
  local gam_usage

  gam_usage="Usage: $0 {Files}"
  if [ $# -lt 1 ]; then
    print $gam_usage
    return 1
  fi

  git diff $* && git add $*
}

function gau() {
  local gau_usage

  gau_usage="Usage: $0 {Files}"
  if [ $# -lt 1 ]; then
    print $gau_usage
    return 1
  fi

  git add $*
}

function gd() {
  local gd_usage

  gd_usage="Usage: $0 {File}"
  if [ $# -gt 1 ]; then
    print $gd_usage
    return 1
  fi

  git diff $*
}

function gsw() {
  local gsw_usage

  gsw_usage="Usage: $0 {Branch}"
  if [ $# -ne 1 ]; then
    print $gsw_usage;
    return 1
  fi

  git checkout $1 && git branch
}

function gud() {
  local gud_usage

  gud_usage="Usage: $0 {Files}"
  if [ $# -lt 1 ]; then
    print $gud_usage;
    return 1
  fi

  git checkout $*
}

function gpull() {
  local gpull_usage current_branch

  gpull_usage="Usage:{pwd=../.git} $0"
  if [ ! -d ./.git ]; then
    print $gpull_usage;
    return 1
  fi

  current_branch=$(basename "$(git symbolic-ref HEAD 2> /dev/null)")

  print "pull $current_branch branch"
  git pull origin $current_branch
}

function gpush() {
  local gpush_usage current_branch

  gpush_usage="Usage:{pwd=../.git} $0"
  if [ ! -d ./.git ]; then
    print $gpush_usage;
    return 1
  fi

  current_branch=$(basename "$(git symbolic-ref HEAD 2> /dev/null)")

  print "push $current_branch branch"
  git push origin $current_branch
}

function git-symbolic-ref-head() {
  local branch_name
  if [[ "$PWD" =~ '/¥.git(/.*)?$' ]]; then
    return
  fi
  branch_name=$(basename "$(git symbolic-ref HEAD 2> /dev/null)")
  if [[ -z $branch_name ]]; then
    return
  fi
  echo $branch_name
}
